never p1 {    /* !(! ((a) && (b))) */
accept_init:
T0_init:
	do
	:: atomic { (! ((! ((a) && (b))))) -> assert(!(! ((! ((a) && (b)))))) }
	od;
accept_all:
	skip
}
never p2 {    /* !(<> (a)) */
accept_init:
T0_init:
	do
	:: (! ((a))) -> goto T0_init
	od;
}
never p3 {    /* !((! (a)) || ([] (! (b)))) */
T0_init:
	do
	:: atomic { (! ((! (a))) && ! ((! (b)))) -> assert(!(! ((! (a))) && ! ((! (b))))) }
	:: (! ((! (a)))) -> goto T0_S3
	od;
T0_S3:
	do
	:: atomic { (! ((! (b)))) -> assert(!(! ((! (b))))) }
	:: (1) -> goto T0_S3
	od;
accept_all:
	skip
}
never p4 {    /* !((! (b)) || ([] (! (a)))) */
T0_init:
	do
	:: atomic { (! ((! (a))) && ! ((! (b)))) -> assert(!(! ((! (a))) && ! ((! (b))))) }
	:: (! ((! (b)))) -> goto T0_S3
	od;
T0_S3:
	do
	:: atomic { (! ((! (a)))) -> assert(!(! ((! (a))))) }
	:: (1) -> goto T0_S3
	od;
accept_all:
	skip
}
